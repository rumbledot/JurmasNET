// <auto-generated />
using System;
using JurmasDAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JurmasDAL.Migrations
{
    [DbContext(typeof(JurmasContext))]
    [Migration("20221106000806_EFC_Init")]
    partial class EFC_Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JurmasDAL.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("JurmasDAL.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("varchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("varchar(100)");

                    b.Property<string>("UOM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("JurmasDAL.Jurmas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Jurmases");
                });

            modelBuilder.Entity("JurmasDAL.Recipee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsFavourite")
                        .HasColumnType("bit");

                    b.Property<int?>("JurmasId")
                        .HasColumnType("int");

                    b.Property<int?>("RecipeeStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("JurmasId");

                    b.HasIndex("RecipeeStatusId");

                    b.ToTable("Recipees");
                });

            modelBuilder.Entity("JurmasDAL.RecipeeHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("LastCooked")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("varchar(500)");

                    b.Property<int?>("RecipeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeeId");

                    b.ToTable("RecipeeHistory");
                });

            modelBuilder.Entity("JurmasDAL.RecipeeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("decimal(14,2)");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeeId");

                    b.ToTable("RecipeeIngredients");
                });

            modelBuilder.Entity("JurmasDAL.RecipeePhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("varchar(100)");

                    b.Property<byte[]>("ImageBinary")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("RecipeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeeId");

                    b.ToTable("RecipeePhotos");
                });

            modelBuilder.Entity("JurmasDAL.RecipeeStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("JurmasDAL.RecipeeStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("varchar(200)");

                    b.Property<int>("RecipeeId")
                        .HasColumnType("int");

                    b.Property<int>("StepNum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeeId");

                    b.ToTable("RecipeeSteps");
                });

            modelBuilder.Entity("JurmasDAL.Recipee", b =>
                {
                    b.HasOne("JurmasDAL.Category", "Category")
                        .WithMany("Recipees")
                        .HasForeignKey("CategoryId");

                    b.HasOne("JurmasDAL.Jurmas", "Jurmas")
                        .WithMany()
                        .HasForeignKey("JurmasId");

                    b.HasOne("JurmasDAL.RecipeeStatus", "RecipeeStatus")
                        .WithMany()
                        .HasForeignKey("RecipeeStatusId");

                    b.Navigation("Category");

                    b.Navigation("Jurmas");

                    b.Navigation("RecipeeStatus");
                });

            modelBuilder.Entity("JurmasDAL.RecipeeHistory", b =>
                {
                    b.HasOne("JurmasDAL.Recipee", "Recipee")
                        .WithMany("History")
                        .HasForeignKey("RecipeeId");

                    b.Navigation("Recipee");
                });

            modelBuilder.Entity("JurmasDAL.RecipeeIngredient", b =>
                {
                    b.HasOne("JurmasDAL.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JurmasDAL.Recipee", "Recipee")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipee");
                });

            modelBuilder.Entity("JurmasDAL.RecipeePhoto", b =>
                {
                    b.HasOne("JurmasDAL.Recipee", "Recipee")
                        .WithMany("Photos")
                        .HasForeignKey("RecipeeId");

                    b.Navigation("Recipee");
                });

            modelBuilder.Entity("JurmasDAL.RecipeeStep", b =>
                {
                    b.HasOne("JurmasDAL.Recipee", "Recipee")
                        .WithMany("Steps")
                        .HasForeignKey("RecipeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipee");
                });

            modelBuilder.Entity("JurmasDAL.Category", b =>
                {
                    b.Navigation("Recipees");
                });

            modelBuilder.Entity("JurmasDAL.Recipee", b =>
                {
                    b.Navigation("History");

                    b.Navigation("Ingredients");

                    b.Navigation("Photos");

                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
